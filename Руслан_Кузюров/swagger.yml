openapi: 3.0.3
info:
  title: Birthday Bot API
  description: REST API для управления днями рождения пользователей
  version: 1.0.0
  contact:
    name: Birthday Bot Support
    email: support@birthdaybot.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.birthdaybot.com
    description: Production server
  - url: https://staging-api.birthdaybot.com
    description: Staging server
  - url: http://localhost:3000
    description: Development server

tags:
  - name: Birthdays
    description: Управление днями рождения
  - name: Statistics
    description: Статистика пользователей
  - name: Admin
    description: Административные функции

paths:
  /v1/users/{userId}/birthdays:
    get:
      tags:
        - Birthdays
      summary: Получение всех дней рождения пользователя
      description: Возвращает список всех дней рождения для указанного пользователя
      operationId: getBirthdays
      parameters:
        - name: userId
          in: path
          required: true
          description: Уникальный идентификатор пользователя (chat_id)
          schema:
            type: integer
            format: int64
            example: 123456789
      responses:
        '200':
          description: Успешное получение списка дней рождения
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    format: int64
                    description: Уникальный идентификатор пользователя
                    example: 123456789
                  birthdays:
                    type: array
                    description: Массив дней рождения
                    items:
                      $ref: '#/components/schemas/Birthday'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Birthdays
      summary: Добавление нового дня рождения
      description: Создает новый день рождения для указанного пользователя
      operationId: createBirthday
      parameters:
        - name: userId
          in: path
          required: true
          description: Уникальный идентификатор пользователя (chat_id)
          schema:
            type: integer
            format: int64
            example: 123456789
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBirthdayRequest'
            example:
              name: "Анна"
              birth_date: "1990-03-15"
              info: "Моя сестра"
      responses:
        '201':
          description: День рождения успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  birthday_id:
                    type: integer
                    format: int64
                    description: Уникальный идентификатор созданного дня рождения
                    example: 1
                  message:
                    type: string
                    example: "День рождения успешно добавлен"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/users/{userId}/birthdays/{birthdayId}:
    get:
      tags:
        - Birthdays
      summary: Получение конкретного дня рождения
      description: Возвращает информацию о конкретном дне рождения
      operationId: getBirthday
      parameters:
        - name: userId
          in: path
          required: true
          description: Уникальный идентификатор пользователя (chat_id)
          schema:
            type: integer
            format: int64
            example: 123456789
        - name: birthdayId
          in: path
          required: true
          description: Уникальный идентификатор дня рождения
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: Успешное получение дня рождения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Birthday'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Birthdays
      summary: Обновление дня рождения
      description: Обновляет существующий день рождения
      operationId: updateBirthday
      parameters:
        - name: userId
          in: path
          required: true
          description: Уникальный идентификатор пользователя (chat_id)
          schema:
            type: integer
            format: int64
            example: 123456789
        - name: birthdayId
          in: path
          required: true
          description: Уникальный идентификатор дня рождения
          schema:
            type: integer
            format: int64
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBirthdayRequest'
            example:
              name: "Анна Петрова"
              birth_date: "1990-03-15"
              info: "Моя сестра, любит рисовать"
      responses:
        '200':
          description: День рождения успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "День рождения успешно обновлен"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Birthdays
      summary: Удаление дня рождения
      description: Удаляет день рождения
      operationId: deleteBirthday
      parameters:
        - name: userId
          in: path
          required: true
          description: Уникальный идентификатор пользователя (chat_id)
          schema:
            type: integer
            format: int64
            example: 123456789
        - name: birthdayId
          in: path
          required: true
          description: Уникальный идентификатор дня рождения
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: День рождения успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "День рождения успешно удален"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/users/{userId}/stats:
    get:
      tags:
        - Statistics
      summary: Получение статистики пользователя
      description: Возвращает статистику по дням рождения пользователя
      operationId: getUserStats
      parameters:
        - name: userId
          in: path
          required: true
          description: Уникальный идентификатор пользователя (chat_id)
          schema:
            type: integer
            format: int64
            example: 123456789
      responses:
        '200':
          description: Успешное получение статистики
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStats'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v1/admin/test-reminders:
    post:
      tags:
        - Admin
      summary: Тестирование системы напоминаний
      description: Запускает тестовую проверку системы напоминаний (только для администраторов)
      operationId: testReminders
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Тест напоминаний выполнен успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  reminders_sent:
                    type: integer
                    description: Количество отправленных напоминаний
                    example: 5
                  message:
                    type: string
                    example: "Тест напоминаний выполнен успешно"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: api_key
      description: API ключ для авторизации

  schemas:
    Birthday:
      type: object
      required:
        - id
        - name
        - birth_date
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор дня рождения
          example: 1
        name:
          type: string
          description: Имя человека
          example: "Анна"
        birth_date:
          type: string
          format: date
          description: Дата рождения в формате YYYY-MM-DD
          example: "1990-03-15"
        info:
          type: string
          description: Дополнительная информация о человеке
          example: "Моя сестра"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: Дата последнего обновления
          example: "2024-01-15T10:30:00Z"

    CreateBirthdayRequest:
      type: object
      required:
        - name
        - birth_date
      properties:
        name:
          type: string
          description: Имя человека
          example: "Анна"
        birth_date:
          type: string
          format: date
          description: Дата рождения в формате YYYY-MM-DD
          example: "1990-03-15"
        info:
          type: string
          description: Дополнительная информация о человеке
          example: "Моя сестра"

    UpdateBirthdayRequest:
      type: object
      required:
        - name
        - birth_date
      properties:
        name:
          type: string
          description: Имя человека
          example: "Анна Петрова"
        birth_date:
          type: string
          format: date
          description: Дата рождения в формате YYYY-MM-DD
          example: "1990-03-15"
        info:
          type: string
          description: Дополнительная информация о человеке
          example: "Моя сестра, любит рисовать"

    UserStats:
      type: object
      required:
        - total_birthdays
        - upcoming_birthdays
        - today_birthdays
        - this_month_birthdays
      properties:
        total_birthdays:
          type: integer
          description: Общее количество дней рождения
          example: 25
        upcoming_birthdays:
          type: integer
          description: Количество предстоящих дней рождения
          example: 3
        today_birthdays:
          type: integer
          description: Количество дней рождения сегодня
          example: 1
        this_month_birthdays:
          type: integer
          description: Количество дней рождения в этом месяце
          example: 2

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Код ошибки
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Описание ошибки
          example: "Неверные данные запроса"
        details:
          type: object
          description: Дополнительные детали ошибки

  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "BAD_REQUEST"
            message: "Неверные параметры запроса"

    Unauthorized:
      description: Не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "UNAUTHORIZED"
            message: "Требуется авторизация"

    Forbidden:
      description: Доступ запрещен
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "FORBIDDEN"
            message: "Недостаточно прав доступа"

    NotFound:
      description: Ресурс не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "NOT_FOUND"
            message: "Ресурс не найден"

    InternalServerError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INTERNAL_ERROR"
            message: "Внутренняя ошибка сервера"